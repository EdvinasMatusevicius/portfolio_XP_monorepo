services:
  server:
    build: 
      context: ./packages/server
    restart: always
    depends_on:
      - databaseXp
    environment:
      NODE_ENV: ${NODE_ENV}
      SERVER_SERVICE_PORT: ${SERVER_SERVICE_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      DB_PORT: ${DB_PORT}
    ports:
      - ${SERVER_SERVICE_PORT}:${SERVER_SERVICE_PORT}
    volumes:
      - ./packages/server:/usr/portfolioXP/
      - /usr/portfolioXP/node_modules
    networks:
      - shared-network
    command: /usr/portfolioXP/node_modules/.bin/nodemon -L --exec ts-node ./src/index.ts
  client:
    build: 
      context: ./packages/client
      dockerfile: Dockerfile
      args:
        VITE_API_URL: http://93.127.213.247/:${SERVER_SERVICE_PORT}
    restart: always
    depends_on:
      - server
    ports:
      - ${WEB_CLIENT_PORT}:${WEB_CLIENT_PORT}
    volumes:
      - ./packages/client:/usr/portfolioXP/
      - /usr/portfolioXP/node_modules
    networks:
      - shared-network
    command: npm run dev
    # extra_hosts:
    #   - "host.docker.internal:172.17.0.1"
    environment:
      - VITE_API_URL=http://93.127.213.247/:${SERVER_SERVICE_PORT}
  databaseXp:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      DB_PORT: ${DB_PORT}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/portfolioDb/data
    networks:
      - shared-network
networks:
  shared-network:
    driver: bridge
volumes:
  dbdata: