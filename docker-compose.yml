services:
  server:
    build: 
      context: ./packages/server
    restart: always
    depends_on:
      - databaseXp
    environment:
      NODE_ENV: ${NODE_ENV}
      SERVER_SERVICE_PORT: ${SERVER_SERVICE_PORT}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      DB_PORT: ${DB_PORT}
    # ports:
    #   - ${SERVER_SERVICE_PORT}:${SERVER_SERVICE_PORT}
    volumes:
      - ./packages/server:/usr/portfolioXP/
      - /usr/portfolioXP/node_modules
    networks:
      - shared-network
    command: /usr/portfolioXP/node_modules/.bin/nodemon -L --exec ts-node ./src/index.ts
  databaseXp:
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      DB_PORT: ${DB_PORT}
    # ports:
    #   - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./mysql-init:/docker-entrypoint-initdb.d
      - dbdata:/var/lib/portfolioDb/data
    networks:
      - shared-network  
  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
      - certbot_certs:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    environment:
      SERVER_SERVICE_PORT: ${SERVER_SERVICE_PORT}
      DOMAIN_NAME: ${DOMAIN_NAME}
    command: /bin/sh -c "envsubst '$$SERVER_SERVICE_PORT $$DOMAIN_NAME' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    networks:
      - shared-network
    depends_on:
      - server
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_webroot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --deploy-hook \"nginx -s reload\"; sleep 12h & wait $${!}; done;'"
    network_mode: "service:nginx"
    restart: unless-stopped
    depends_on:
      - nginx
    healthcheck:
      test: ["CMD", "certbot", "certificates"]
      interval: 24h
      timeout: 10s
      retries: 3
networks:
  shared-network:
    driver: bridge
volumes:
  dbdata:
  certbot_certs:
  certbot_webroot: